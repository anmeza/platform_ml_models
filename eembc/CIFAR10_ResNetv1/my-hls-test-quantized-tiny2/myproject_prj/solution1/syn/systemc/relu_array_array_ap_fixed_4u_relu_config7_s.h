// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_array_array_ap_fixed_4u_relu_config7_s_HH_
#define _relu_array_array_ap_fixed_4u_relu_config7_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct relu_array_array_ap_fixed_4u_relu_config7_s : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<9> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<9> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<9> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_in< sc_lv<9> > data_V_data_3_V_dout;
    sc_in< sc_logic > data_V_data_3_V_empty_n;
    sc_out< sc_logic > data_V_data_3_V_read;
    sc_out< sc_lv<8> > res_V_data_0_V_din;
    sc_in< sc_logic > res_V_data_0_V_full_n;
    sc_out< sc_logic > res_V_data_0_V_write;
    sc_out< sc_lv<8> > res_V_data_1_V_din;
    sc_in< sc_logic > res_V_data_1_V_full_n;
    sc_out< sc_logic > res_V_data_1_V_write;
    sc_out< sc_lv<8> > res_V_data_2_V_din;
    sc_in< sc_logic > res_V_data_2_V_full_n;
    sc_out< sc_logic > res_V_data_2_V_write;
    sc_out< sc_lv<8> > res_V_data_3_V_din;
    sc_in< sc_logic > res_V_data_3_V_full_n;
    sc_out< sc_logic > res_V_data_3_V_write;


    // Module declarations
    relu_array_array_ap_fixed_4u_relu_config7_s(sc_module_name name);
    SC_HAS_PROCESS(relu_array_array_ap_fixed_4u_relu_config7_s);

    ~relu_array_array_ap_fixed_4u_relu_config7_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > data_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln60_reg_419;
    sc_signal< sc_logic > data_V_data_1_V_blk_n;
    sc_signal< sc_logic > data_V_data_2_V_blk_n;
    sc_signal< sc_logic > data_V_data_3_V_blk_n;
    sc_signal< sc_logic > res_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > icmp_ln60_reg_419_pp0_iter1_reg;
    sc_signal< sc_logic > res_V_data_1_V_blk_n;
    sc_signal< sc_logic > res_V_data_2_V_blk_n;
    sc_signal< sc_logic > res_V_data_3_V_blk_n;
    sc_signal< sc_lv<11> > i_0_reg_108;
    sc_signal< sc_lv<1> > icmp_ln60_fu_119_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op20;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< sc_logic > io_acc_block_signal_op68;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<11> > i_fu_125_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<7> > tmp_data_0_V_1_fu_203_p3;
    sc_signal< sc_lv<7> > tmp_data_0_V_1_reg_428;
    sc_signal< sc_lv<7> > tmp_data_1_V_1_fu_267_p3;
    sc_signal< sc_lv<7> > tmp_data_1_V_1_reg_433;
    sc_signal< sc_lv<7> > tmp_data_2_V_1_fu_331_p3;
    sc_signal< sc_lv<7> > tmp_data_2_V_1_reg_438;
    sc_signal< sc_lv<7> > tmp_data_3_V_1_fu_395_p3;
    sc_signal< sc_lv<7> > tmp_data_3_V_1_reg_443;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<5> > trunc_ln746_fu_153_p1;
    sc_signal< sc_lv<3> > p_Result_2_fu_173_p4;
    sc_signal< sc_lv<1> > tmp_1_fu_165_p3;
    sc_signal< sc_lv<1> > icmp_ln785_fu_183_p2;
    sc_signal< sc_lv<1> > or_ln785_fu_189_p2;
    sc_signal< sc_lv<7> > trunc_ln_fu_157_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_147_p2;
    sc_signal< sc_lv<7> > select_ln785_fu_195_p3;
    sc_signal< sc_lv<5> > trunc_ln746_4_fu_217_p1;
    sc_signal< sc_lv<3> > p_Result_2_1_fu_237_p4;
    sc_signal< sc_lv<1> > tmp_2_fu_229_p3;
    sc_signal< sc_lv<1> > icmp_ln785_1_fu_247_p2;
    sc_signal< sc_lv<1> > or_ln785_1_fu_253_p2;
    sc_signal< sc_lv<7> > trunc_ln746_1_fu_221_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_211_p2;
    sc_signal< sc_lv<7> > select_ln785_1_fu_259_p3;
    sc_signal< sc_lv<5> > trunc_ln746_5_fu_281_p1;
    sc_signal< sc_lv<3> > p_Result_2_2_fu_301_p4;
    sc_signal< sc_lv<1> > tmp_3_fu_293_p3;
    sc_signal< sc_lv<1> > icmp_ln785_2_fu_311_p2;
    sc_signal< sc_lv<1> > or_ln785_2_fu_317_p2;
    sc_signal< sc_lv<7> > trunc_ln746_2_fu_285_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_2_fu_275_p2;
    sc_signal< sc_lv<7> > select_ln785_2_fu_323_p3;
    sc_signal< sc_lv<5> > trunc_ln746_6_fu_345_p1;
    sc_signal< sc_lv<3> > p_Result_2_3_fu_365_p4;
    sc_signal< sc_lv<1> > tmp_4_fu_357_p3;
    sc_signal< sc_lv<1> > icmp_ln785_3_fu_375_p2;
    sc_signal< sc_lv<1> > or_ln785_3_fu_381_p2;
    sc_signal< sc_lv<7> > trunc_ln746_3_fu_349_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_3_fu_339_p2;
    sc_signal< sc_lv<7> > select_ln785_3_fu_387_p3;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<7> ap_const_lv7_7F;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_data_V_data_3_V_blk_n();
    void thread_data_V_data_3_V_read();
    void thread_i_fu_125_p2();
    void thread_icmp_ln1494_1_fu_211_p2();
    void thread_icmp_ln1494_2_fu_275_p2();
    void thread_icmp_ln1494_3_fu_339_p2();
    void thread_icmp_ln1494_fu_147_p2();
    void thread_icmp_ln60_fu_119_p2();
    void thread_icmp_ln785_1_fu_247_p2();
    void thread_icmp_ln785_2_fu_311_p2();
    void thread_icmp_ln785_3_fu_375_p2();
    void thread_icmp_ln785_fu_183_p2();
    void thread_internal_ap_ready();
    void thread_io_acc_block_signal_op20();
    void thread_io_acc_block_signal_op68();
    void thread_or_ln785_1_fu_253_p2();
    void thread_or_ln785_2_fu_317_p2();
    void thread_or_ln785_3_fu_381_p2();
    void thread_or_ln785_fu_189_p2();
    void thread_p_Result_2_1_fu_237_p4();
    void thread_p_Result_2_2_fu_301_p4();
    void thread_p_Result_2_3_fu_365_p4();
    void thread_p_Result_2_fu_173_p4();
    void thread_real_start();
    void thread_res_V_data_0_V_blk_n();
    void thread_res_V_data_0_V_din();
    void thread_res_V_data_0_V_write();
    void thread_res_V_data_1_V_blk_n();
    void thread_res_V_data_1_V_din();
    void thread_res_V_data_1_V_write();
    void thread_res_V_data_2_V_blk_n();
    void thread_res_V_data_2_V_din();
    void thread_res_V_data_2_V_write();
    void thread_res_V_data_3_V_blk_n();
    void thread_res_V_data_3_V_din();
    void thread_res_V_data_3_V_write();
    void thread_select_ln785_1_fu_259_p3();
    void thread_select_ln785_2_fu_323_p3();
    void thread_select_ln785_3_fu_387_p3();
    void thread_select_ln785_fu_195_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_1_fu_165_p3();
    void thread_tmp_2_fu_229_p3();
    void thread_tmp_3_fu_293_p3();
    void thread_tmp_4_fu_357_p3();
    void thread_tmp_data_0_V_1_fu_203_p3();
    void thread_tmp_data_1_V_1_fu_267_p3();
    void thread_tmp_data_2_V_1_fu_331_p3();
    void thread_tmp_data_3_V_1_fu_395_p3();
    void thread_trunc_ln746_1_fu_221_p3();
    void thread_trunc_ln746_2_fu_285_p3();
    void thread_trunc_ln746_3_fu_349_p3();
    void thread_trunc_ln746_4_fu_217_p1();
    void thread_trunc_ln746_5_fu_281_p1();
    void thread_trunc_ln746_6_fu_345_p1();
    void thread_trunc_ln746_fu_153_p1();
    void thread_trunc_ln_fu_157_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
