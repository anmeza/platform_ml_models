// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "relu_array_array_ap_fixed_4u_relu_config7_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> relu_array_array_ap_fixed_4u_relu_config7_s::ap_ST_fsm_state1 = "1";
const sc_lv<3> relu_array_array_ap_fixed_4u_relu_config7_s::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> relu_array_array_ap_fixed_4u_relu_config7_s::ap_ST_fsm_state5 = "100";
const bool relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_boolean_1 = true;
const sc_lv<32> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv32_1 = "1";
const bool relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_boolean_0 = false;
const sc_lv<1> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv1_0 = "0";
const sc_lv<1> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv1_1 = "1";
const sc_lv<11> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv11_0 = "00000000000";
const sc_lv<11> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv11_400 = "10000000000";
const sc_lv<11> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv11_1 = "1";
const sc_lv<9> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv9_0 = "000000000";
const sc_lv<2> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv2_0 = "00";
const sc_lv<32> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv32_5 = "101";
const sc_lv<32> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv32_6 = "110";
const sc_lv<32> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv32_8 = "1000";
const sc_lv<3> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv3_0 = "000";
const sc_lv<7> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv7_7F = "1111111";
const sc_lv<7> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv7_0 = "0000000";
const sc_lv<32> relu_array_array_ap_fixed_4u_relu_config7_s::ap_const_lv32_2 = "10";

relu_array_array_ap_fixed_4u_relu_config7_s::relu_array_array_ap_fixed_4u_relu_config7_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );
    sensitive << ( io_acc_block_signal_op20 );
    sensitive << ( io_acc_block_signal_op68 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );
    sensitive << ( io_acc_block_signal_op20 );
    sensitive << ( io_acc_block_signal_op68 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );
    sensitive << ( io_acc_block_signal_op20 );
    sensitive << ( io_acc_block_signal_op68 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( io_acc_block_signal_op20 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );
    sensitive << ( io_acc_block_signal_op68 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln60_fu_119_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_data_V_data_0_V_blk_n);
    sensitive << ( data_V_data_0_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln60_reg_419 );

    SC_METHOD(thread_data_V_data_0_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_1_V_blk_n);
    sensitive << ( data_V_data_1_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln60_reg_419 );

    SC_METHOD(thread_data_V_data_1_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_2_V_blk_n);
    sensitive << ( data_V_data_2_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln60_reg_419 );

    SC_METHOD(thread_data_V_data_2_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_3_V_blk_n);
    sensitive << ( data_V_data_3_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln60_reg_419 );

    SC_METHOD(thread_data_V_data_3_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_fu_125_p2);
    sensitive << ( i_0_reg_108 );

    SC_METHOD(thread_icmp_ln1494_1_fu_211_p2);
    sensitive << ( data_V_data_1_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln1494_2_fu_275_p2);
    sensitive << ( data_V_data_2_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln1494_3_fu_339_p2);
    sensitive << ( data_V_data_3_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln1494_fu_147_p2);
    sensitive << ( data_V_data_0_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln60_fu_119_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_0_reg_108 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln785_1_fu_247_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_2_1_fu_237_p4 );

    SC_METHOD(thread_icmp_ln785_2_fu_311_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_2_2_fu_301_p4 );

    SC_METHOD(thread_icmp_ln785_3_fu_375_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_2_3_fu_365_p4 );

    SC_METHOD(thread_icmp_ln785_fu_183_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_419 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_2_fu_173_p4 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_io_acc_block_signal_op20);
    sensitive << ( data_V_data_0_V_empty_n );
    sensitive << ( data_V_data_1_V_empty_n );
    sensitive << ( data_V_data_2_V_empty_n );
    sensitive << ( data_V_data_3_V_empty_n );

    SC_METHOD(thread_io_acc_block_signal_op68);
    sensitive << ( res_V_data_0_V_full_n );
    sensitive << ( res_V_data_1_V_full_n );
    sensitive << ( res_V_data_2_V_full_n );
    sensitive << ( res_V_data_3_V_full_n );

    SC_METHOD(thread_or_ln785_1_fu_253_p2);
    sensitive << ( tmp_2_fu_229_p3 );
    sensitive << ( icmp_ln785_1_fu_247_p2 );

    SC_METHOD(thread_or_ln785_2_fu_317_p2);
    sensitive << ( tmp_3_fu_293_p3 );
    sensitive << ( icmp_ln785_2_fu_311_p2 );

    SC_METHOD(thread_or_ln785_3_fu_381_p2);
    sensitive << ( tmp_4_fu_357_p3 );
    sensitive << ( icmp_ln785_3_fu_375_p2 );

    SC_METHOD(thread_or_ln785_fu_189_p2);
    sensitive << ( tmp_1_fu_165_p3 );
    sensitive << ( icmp_ln785_fu_183_p2 );

    SC_METHOD(thread_p_Result_2_1_fu_237_p4);
    sensitive << ( data_V_data_1_V_dout );

    SC_METHOD(thread_p_Result_2_2_fu_301_p4);
    sensitive << ( data_V_data_2_V_dout );

    SC_METHOD(thread_p_Result_2_3_fu_365_p4);
    sensitive << ( data_V_data_3_V_dout );

    SC_METHOD(thread_p_Result_2_fu_173_p4);
    sensitive << ( data_V_data_0_V_dout );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_res_V_data_0_V_blk_n);
    sensitive << ( res_V_data_0_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_0_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );
    sensitive << ( tmp_data_0_V_1_reg_428 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_0_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_1_V_blk_n);
    sensitive << ( res_V_data_1_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_1_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );
    sensitive << ( tmp_data_1_V_1_reg_433 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_1_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_2_V_blk_n);
    sensitive << ( res_V_data_2_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_2_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );
    sensitive << ( tmp_data_2_V_1_reg_438 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_2_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_3_V_blk_n);
    sensitive << ( res_V_data_3_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_3_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );
    sensitive << ( tmp_data_3_V_1_reg_443 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_3_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_reg_419_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_select_ln785_1_fu_259_p3);
    sensitive << ( or_ln785_1_fu_253_p2 );
    sensitive << ( trunc_ln746_1_fu_221_p3 );

    SC_METHOD(thread_select_ln785_2_fu_323_p3);
    sensitive << ( or_ln785_2_fu_317_p2 );
    sensitive << ( trunc_ln746_2_fu_285_p3 );

    SC_METHOD(thread_select_ln785_3_fu_387_p3);
    sensitive << ( or_ln785_3_fu_381_p2 );
    sensitive << ( trunc_ln746_3_fu_349_p3 );

    SC_METHOD(thread_select_ln785_fu_195_p3);
    sensitive << ( or_ln785_fu_189_p2 );
    sensitive << ( trunc_ln_fu_157_p3 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_1_fu_165_p3);
    sensitive << ( data_V_data_0_V_dout );

    SC_METHOD(thread_tmp_2_fu_229_p3);
    sensitive << ( data_V_data_1_V_dout );

    SC_METHOD(thread_tmp_3_fu_293_p3);
    sensitive << ( data_V_data_2_V_dout );

    SC_METHOD(thread_tmp_4_fu_357_p3);
    sensitive << ( data_V_data_3_V_dout );

    SC_METHOD(thread_tmp_data_0_V_1_fu_203_p3);
    sensitive << ( icmp_ln1494_fu_147_p2 );
    sensitive << ( select_ln785_fu_195_p3 );

    SC_METHOD(thread_tmp_data_1_V_1_fu_267_p3);
    sensitive << ( icmp_ln1494_1_fu_211_p2 );
    sensitive << ( select_ln785_1_fu_259_p3 );

    SC_METHOD(thread_tmp_data_2_V_1_fu_331_p3);
    sensitive << ( icmp_ln1494_2_fu_275_p2 );
    sensitive << ( select_ln785_2_fu_323_p3 );

    SC_METHOD(thread_tmp_data_3_V_1_fu_395_p3);
    sensitive << ( icmp_ln1494_3_fu_339_p2 );
    sensitive << ( select_ln785_3_fu_387_p3 );

    SC_METHOD(thread_trunc_ln746_1_fu_221_p3);
    sensitive << ( trunc_ln746_4_fu_217_p1 );

    SC_METHOD(thread_trunc_ln746_2_fu_285_p3);
    sensitive << ( trunc_ln746_5_fu_281_p1 );

    SC_METHOD(thread_trunc_ln746_3_fu_349_p3);
    sensitive << ( trunc_ln746_6_fu_345_p1 );

    SC_METHOD(thread_trunc_ln746_4_fu_217_p1);
    sensitive << ( data_V_data_1_V_dout );

    SC_METHOD(thread_trunc_ln746_5_fu_281_p1);
    sensitive << ( data_V_data_2_V_dout );

    SC_METHOD(thread_trunc_ln746_6_fu_345_p1);
    sensitive << ( data_V_data_3_V_dout );

    SC_METHOD(thread_trunc_ln746_fu_153_p1);
    sensitive << ( data_V_data_0_V_dout );

    SC_METHOD(thread_trunc_ln_fu_157_p3);
    sensitive << ( trunc_ln746_fu_153_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln60_fu_119_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "relu_array_array_ap_fixed_4u_relu_config7_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, data_V_data_0_V_dout, "(port)data_V_data_0_V_dout");
    sc_trace(mVcdFile, data_V_data_0_V_empty_n, "(port)data_V_data_0_V_empty_n");
    sc_trace(mVcdFile, data_V_data_0_V_read, "(port)data_V_data_0_V_read");
    sc_trace(mVcdFile, data_V_data_1_V_dout, "(port)data_V_data_1_V_dout");
    sc_trace(mVcdFile, data_V_data_1_V_empty_n, "(port)data_V_data_1_V_empty_n");
    sc_trace(mVcdFile, data_V_data_1_V_read, "(port)data_V_data_1_V_read");
    sc_trace(mVcdFile, data_V_data_2_V_dout, "(port)data_V_data_2_V_dout");
    sc_trace(mVcdFile, data_V_data_2_V_empty_n, "(port)data_V_data_2_V_empty_n");
    sc_trace(mVcdFile, data_V_data_2_V_read, "(port)data_V_data_2_V_read");
    sc_trace(mVcdFile, data_V_data_3_V_dout, "(port)data_V_data_3_V_dout");
    sc_trace(mVcdFile, data_V_data_3_V_empty_n, "(port)data_V_data_3_V_empty_n");
    sc_trace(mVcdFile, data_V_data_3_V_read, "(port)data_V_data_3_V_read");
    sc_trace(mVcdFile, res_V_data_0_V_din, "(port)res_V_data_0_V_din");
    sc_trace(mVcdFile, res_V_data_0_V_full_n, "(port)res_V_data_0_V_full_n");
    sc_trace(mVcdFile, res_V_data_0_V_write, "(port)res_V_data_0_V_write");
    sc_trace(mVcdFile, res_V_data_1_V_din, "(port)res_V_data_1_V_din");
    sc_trace(mVcdFile, res_V_data_1_V_full_n, "(port)res_V_data_1_V_full_n");
    sc_trace(mVcdFile, res_V_data_1_V_write, "(port)res_V_data_1_V_write");
    sc_trace(mVcdFile, res_V_data_2_V_din, "(port)res_V_data_2_V_din");
    sc_trace(mVcdFile, res_V_data_2_V_full_n, "(port)res_V_data_2_V_full_n");
    sc_trace(mVcdFile, res_V_data_2_V_write, "(port)res_V_data_2_V_write");
    sc_trace(mVcdFile, res_V_data_3_V_din, "(port)res_V_data_3_V_din");
    sc_trace(mVcdFile, res_V_data_3_V_full_n, "(port)res_V_data_3_V_full_n");
    sc_trace(mVcdFile, res_V_data_3_V_write, "(port)res_V_data_3_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, data_V_data_0_V_blk_n, "data_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln60_reg_419, "icmp_ln60_reg_419");
    sc_trace(mVcdFile, data_V_data_1_V_blk_n, "data_V_data_1_V_blk_n");
    sc_trace(mVcdFile, data_V_data_2_V_blk_n, "data_V_data_2_V_blk_n");
    sc_trace(mVcdFile, data_V_data_3_V_blk_n, "data_V_data_3_V_blk_n");
    sc_trace(mVcdFile, res_V_data_0_V_blk_n, "res_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln60_reg_419_pp0_iter1_reg, "icmp_ln60_reg_419_pp0_iter1_reg");
    sc_trace(mVcdFile, res_V_data_1_V_blk_n, "res_V_data_1_V_blk_n");
    sc_trace(mVcdFile, res_V_data_2_V_blk_n, "res_V_data_2_V_blk_n");
    sc_trace(mVcdFile, res_V_data_3_V_blk_n, "res_V_data_3_V_blk_n");
    sc_trace(mVcdFile, i_0_reg_108, "i_0_reg_108");
    sc_trace(mVcdFile, icmp_ln60_fu_119_p2, "icmp_ln60_fu_119_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, io_acc_block_signal_op20, "io_acc_block_signal_op20");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, io_acc_block_signal_op68, "io_acc_block_signal_op68");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_125_p2, "i_fu_125_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_data_0_V_1_fu_203_p3, "tmp_data_0_V_1_fu_203_p3");
    sc_trace(mVcdFile, tmp_data_0_V_1_reg_428, "tmp_data_0_V_1_reg_428");
    sc_trace(mVcdFile, tmp_data_1_V_1_fu_267_p3, "tmp_data_1_V_1_fu_267_p3");
    sc_trace(mVcdFile, tmp_data_1_V_1_reg_433, "tmp_data_1_V_1_reg_433");
    sc_trace(mVcdFile, tmp_data_2_V_1_fu_331_p3, "tmp_data_2_V_1_fu_331_p3");
    sc_trace(mVcdFile, tmp_data_2_V_1_reg_438, "tmp_data_2_V_1_reg_438");
    sc_trace(mVcdFile, tmp_data_3_V_1_fu_395_p3, "tmp_data_3_V_1_fu_395_p3");
    sc_trace(mVcdFile, tmp_data_3_V_1_reg_443, "tmp_data_3_V_1_reg_443");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, trunc_ln746_fu_153_p1, "trunc_ln746_fu_153_p1");
    sc_trace(mVcdFile, p_Result_2_fu_173_p4, "p_Result_2_fu_173_p4");
    sc_trace(mVcdFile, tmp_1_fu_165_p3, "tmp_1_fu_165_p3");
    sc_trace(mVcdFile, icmp_ln785_fu_183_p2, "icmp_ln785_fu_183_p2");
    sc_trace(mVcdFile, or_ln785_fu_189_p2, "or_ln785_fu_189_p2");
    sc_trace(mVcdFile, trunc_ln_fu_157_p3, "trunc_ln_fu_157_p3");
    sc_trace(mVcdFile, icmp_ln1494_fu_147_p2, "icmp_ln1494_fu_147_p2");
    sc_trace(mVcdFile, select_ln785_fu_195_p3, "select_ln785_fu_195_p3");
    sc_trace(mVcdFile, trunc_ln746_4_fu_217_p1, "trunc_ln746_4_fu_217_p1");
    sc_trace(mVcdFile, p_Result_2_1_fu_237_p4, "p_Result_2_1_fu_237_p4");
    sc_trace(mVcdFile, tmp_2_fu_229_p3, "tmp_2_fu_229_p3");
    sc_trace(mVcdFile, icmp_ln785_1_fu_247_p2, "icmp_ln785_1_fu_247_p2");
    sc_trace(mVcdFile, or_ln785_1_fu_253_p2, "or_ln785_1_fu_253_p2");
    sc_trace(mVcdFile, trunc_ln746_1_fu_221_p3, "trunc_ln746_1_fu_221_p3");
    sc_trace(mVcdFile, icmp_ln1494_1_fu_211_p2, "icmp_ln1494_1_fu_211_p2");
    sc_trace(mVcdFile, select_ln785_1_fu_259_p3, "select_ln785_1_fu_259_p3");
    sc_trace(mVcdFile, trunc_ln746_5_fu_281_p1, "trunc_ln746_5_fu_281_p1");
    sc_trace(mVcdFile, p_Result_2_2_fu_301_p4, "p_Result_2_2_fu_301_p4");
    sc_trace(mVcdFile, tmp_3_fu_293_p3, "tmp_3_fu_293_p3");
    sc_trace(mVcdFile, icmp_ln785_2_fu_311_p2, "icmp_ln785_2_fu_311_p2");
    sc_trace(mVcdFile, or_ln785_2_fu_317_p2, "or_ln785_2_fu_317_p2");
    sc_trace(mVcdFile, trunc_ln746_2_fu_285_p3, "trunc_ln746_2_fu_285_p3");
    sc_trace(mVcdFile, icmp_ln1494_2_fu_275_p2, "icmp_ln1494_2_fu_275_p2");
    sc_trace(mVcdFile, select_ln785_2_fu_323_p3, "select_ln785_2_fu_323_p3");
    sc_trace(mVcdFile, trunc_ln746_6_fu_345_p1, "trunc_ln746_6_fu_345_p1");
    sc_trace(mVcdFile, p_Result_2_3_fu_365_p4, "p_Result_2_3_fu_365_p4");
    sc_trace(mVcdFile, tmp_4_fu_357_p3, "tmp_4_fu_357_p3");
    sc_trace(mVcdFile, icmp_ln785_3_fu_375_p2, "icmp_ln785_3_fu_375_p2");
    sc_trace(mVcdFile, or_ln785_3_fu_381_p2, "or_ln785_3_fu_381_p2");
    sc_trace(mVcdFile, trunc_ln746_3_fu_349_p3, "trunc_ln746_3_fu_349_p3");
    sc_trace(mVcdFile, icmp_ln1494_3_fu_339_p2, "icmp_ln1494_3_fu_339_p2");
    sc_trace(mVcdFile, select_ln785_3_fu_387_p3, "select_ln785_3_fu_387_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

relu_array_array_ap_fixed_4u_relu_config7_s::~relu_array_array_ap_fixed_4u_relu_config7_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_fu_119_p2.read()))) {
        i_0_reg_108 = i_fu_125_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_reg_108 = ap_const_lv11_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln60_reg_419 = icmp_ln60_fu_119_p2.read();
        icmp_ln60_reg_419_pp0_iter1_reg = icmp_ln60_reg_419.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_0_V_1_reg_428 = tmp_data_0_V_1_fu_203_p3.read();
        tmp_data_1_V_1_reg_433 = tmp_data_1_V_1_fu_267_p3.read();
        tmp_data_2_V_1_reg_438 = tmp_data_2_V_1_fu_331_p3.read();
        tmp_data_3_V_1_reg_443 = tmp_data_3_V_1_fu_395_p3.read();
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op20.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_419_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op68.read())));
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op20.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_419_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op68.read())));
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op20.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_419_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op68.read())));
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op20.read()));
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_419_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op68.read()));
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln60_fu_119_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_data_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0))) {
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n.read();
    } else {
        data_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_data_V_data_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_0_V_read = ap_const_logic_1;
    } else {
        data_V_data_0_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_data_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0))) {
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n.read();
    } else {
        data_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_data_V_data_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_1_V_read = ap_const_logic_1;
    } else {
        data_V_data_1_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_data_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0))) {
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n.read();
    } else {
        data_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_data_V_data_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_2_V_read = ap_const_logic_1;
    } else {
        data_V_data_2_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_data_V_data_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0))) {
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n.read();
    } else {
        data_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_data_V_data_3_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln60_reg_419.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_3_V_read = ap_const_logic_1;
    } else {
        data_V_data_3_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_i_fu_125_p2() {
    i_fu_125_p2 = (!i_0_reg_108.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(i_0_reg_108.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_icmp_ln1494_1_fu_211_p2() {
    icmp_ln1494_1_fu_211_p2 = (!data_V_data_1_V_dout.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): (sc_bigint<9>(data_V_data_1_V_dout.read()) > sc_bigint<9>(ap_const_lv9_0));
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_icmp_ln1494_2_fu_275_p2() {
    icmp_ln1494_2_fu_275_p2 = (!data_V_data_2_V_dout.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): (sc_bigint<9>(data_V_data_2_V_dout.read()) > sc_bigint<9>(ap_const_lv9_0));
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_icmp_ln1494_3_fu_339_p2() {
    icmp_ln1494_3_fu_339_p2 = (!data_V_data_3_V_dout.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): (sc_bigint<9>(data_V_data_3_V_dout.read()) > sc_bigint<9>(ap_const_lv9_0));
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_icmp_ln1494_fu_147_p2() {
    icmp_ln1494_fu_147_p2 = (!data_V_data_0_V_dout.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): (sc_bigint<9>(data_V_data_0_V_dout.read()) > sc_bigint<9>(ap_const_lv9_0));
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_icmp_ln60_fu_119_p2() {
    icmp_ln60_fu_119_p2 = (!i_0_reg_108.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_108.read() == ap_const_lv11_400);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_icmp_ln785_1_fu_247_p2() {
    icmp_ln785_1_fu_247_p2 = (!p_Result_2_1_fu_237_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_2_1_fu_237_p4.read() != ap_const_lv3_0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_icmp_ln785_2_fu_311_p2() {
    icmp_ln785_2_fu_311_p2 = (!p_Result_2_2_fu_301_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_2_2_fu_301_p4.read() != ap_const_lv3_0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_icmp_ln785_3_fu_375_p2() {
    icmp_ln785_3_fu_375_p2 = (!p_Result_2_3_fu_365_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_2_3_fu_365_p4.read() != ap_const_lv3_0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_icmp_ln785_fu_183_p2() {
    icmp_ln785_fu_183_p2 = (!p_Result_2_fu_173_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_2_fu_173_p4.read() != ap_const_lv3_0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_io_acc_block_signal_op20() {
    io_acc_block_signal_op20 = (data_V_data_0_V_empty_n.read() & data_V_data_1_V_empty_n.read() & data_V_data_2_V_empty_n.read() & data_V_data_3_V_empty_n.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_io_acc_block_signal_op68() {
    io_acc_block_signal_op68 = (res_V_data_0_V_full_n.read() & res_V_data_1_V_full_n.read() & res_V_data_2_V_full_n.read() & res_V_data_3_V_full_n.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_or_ln785_1_fu_253_p2() {
    or_ln785_1_fu_253_p2 = (tmp_2_fu_229_p3.read() | icmp_ln785_1_fu_247_p2.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_or_ln785_2_fu_317_p2() {
    or_ln785_2_fu_317_p2 = (tmp_3_fu_293_p3.read() | icmp_ln785_2_fu_311_p2.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_or_ln785_3_fu_381_p2() {
    or_ln785_3_fu_381_p2 = (tmp_4_fu_357_p3.read() | icmp_ln785_3_fu_375_p2.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_or_ln785_fu_189_p2() {
    or_ln785_fu_189_p2 = (tmp_1_fu_165_p3.read() | icmp_ln785_fu_183_p2.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_p_Result_2_1_fu_237_p4() {
    p_Result_2_1_fu_237_p4 = data_V_data_1_V_dout.read().range(8, 6);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_p_Result_2_2_fu_301_p4() {
    p_Result_2_2_fu_301_p4 = data_V_data_2_V_dout.read().range(8, 6);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_p_Result_2_3_fu_365_p4() {
    p_Result_2_3_fu_365_p4 = data_V_data_3_V_dout.read().range(8, 6);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_p_Result_2_fu_173_p4() {
    p_Result_2_fu_173_p4 = data_V_data_0_V_dout.read().range(8, 6);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_res_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_419_pp0_iter1_reg.read()))) {
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n.read();
    } else {
        res_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_res_V_data_0_V_din() {
    res_V_data_0_V_din = esl_zext<8,7>(tmp_data_0_V_1_reg_428.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_res_V_data_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_419_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_0_V_write = ap_const_logic_1;
    } else {
        res_V_data_0_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_res_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_419_pp0_iter1_reg.read()))) {
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n.read();
    } else {
        res_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_res_V_data_1_V_din() {
    res_V_data_1_V_din = esl_zext<8,7>(tmp_data_1_V_1_reg_433.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_res_V_data_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_419_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_1_V_write = ap_const_logic_1;
    } else {
        res_V_data_1_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_res_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_419_pp0_iter1_reg.read()))) {
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n.read();
    } else {
        res_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_res_V_data_2_V_din() {
    res_V_data_2_V_din = esl_zext<8,7>(tmp_data_2_V_1_reg_438.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_res_V_data_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_419_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_2_V_write = ap_const_logic_1;
    } else {
        res_V_data_2_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_res_V_data_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_419_pp0_iter1_reg.read()))) {
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n.read();
    } else {
        res_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_res_V_data_3_V_din() {
    res_V_data_3_V_din = esl_zext<8,7>(tmp_data_3_V_1_reg_443.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_res_V_data_3_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_419_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_3_V_write = ap_const_logic_1;
    } else {
        res_V_data_3_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_select_ln785_1_fu_259_p3() {
    select_ln785_1_fu_259_p3 = (!or_ln785_1_fu_253_p2.read()[0].is_01())? sc_lv<7>(): ((or_ln785_1_fu_253_p2.read()[0].to_bool())? ap_const_lv7_7F: trunc_ln746_1_fu_221_p3.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_select_ln785_2_fu_323_p3() {
    select_ln785_2_fu_323_p3 = (!or_ln785_2_fu_317_p2.read()[0].is_01())? sc_lv<7>(): ((or_ln785_2_fu_317_p2.read()[0].to_bool())? ap_const_lv7_7F: trunc_ln746_2_fu_285_p3.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_select_ln785_3_fu_387_p3() {
    select_ln785_3_fu_387_p3 = (!or_ln785_3_fu_381_p2.read()[0].is_01())? sc_lv<7>(): ((or_ln785_3_fu_381_p2.read()[0].to_bool())? ap_const_lv7_7F: trunc_ln746_3_fu_349_p3.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_select_ln785_fu_195_p3() {
    select_ln785_fu_195_p3 = (!or_ln785_fu_189_p2.read()[0].is_01())? sc_lv<7>(): ((or_ln785_fu_189_p2.read()[0].to_bool())? ap_const_lv7_7F: trunc_ln_fu_157_p3.read());
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_start_out() {
    start_out = real_start.read();
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_tmp_1_fu_165_p3() {
    tmp_1_fu_165_p3 = data_V_data_0_V_dout.read().range(5, 5);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_tmp_2_fu_229_p3() {
    tmp_2_fu_229_p3 = data_V_data_1_V_dout.read().range(5, 5);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_tmp_3_fu_293_p3() {
    tmp_3_fu_293_p3 = data_V_data_2_V_dout.read().range(5, 5);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_tmp_4_fu_357_p3() {
    tmp_4_fu_357_p3 = data_V_data_3_V_dout.read().range(5, 5);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_tmp_data_0_V_1_fu_203_p3() {
    tmp_data_0_V_1_fu_203_p3 = (!icmp_ln1494_fu_147_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln1494_fu_147_p2.read()[0].to_bool())? select_ln785_fu_195_p3.read(): ap_const_lv7_0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_tmp_data_1_V_1_fu_267_p3() {
    tmp_data_1_V_1_fu_267_p3 = (!icmp_ln1494_1_fu_211_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln1494_1_fu_211_p2.read()[0].to_bool())? select_ln785_1_fu_259_p3.read(): ap_const_lv7_0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_tmp_data_2_V_1_fu_331_p3() {
    tmp_data_2_V_1_fu_331_p3 = (!icmp_ln1494_2_fu_275_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln1494_2_fu_275_p2.read()[0].to_bool())? select_ln785_2_fu_323_p3.read(): ap_const_lv7_0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_tmp_data_3_V_1_fu_395_p3() {
    tmp_data_3_V_1_fu_395_p3 = (!icmp_ln1494_3_fu_339_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln1494_3_fu_339_p2.read()[0].to_bool())? select_ln785_3_fu_387_p3.read(): ap_const_lv7_0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_trunc_ln746_1_fu_221_p3() {
    trunc_ln746_1_fu_221_p3 = esl_concat<5,2>(trunc_ln746_4_fu_217_p1.read(), ap_const_lv2_0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_trunc_ln746_2_fu_285_p3() {
    trunc_ln746_2_fu_285_p3 = esl_concat<5,2>(trunc_ln746_5_fu_281_p1.read(), ap_const_lv2_0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_trunc_ln746_3_fu_349_p3() {
    trunc_ln746_3_fu_349_p3 = esl_concat<5,2>(trunc_ln746_6_fu_345_p1.read(), ap_const_lv2_0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_trunc_ln746_4_fu_217_p1() {
    trunc_ln746_4_fu_217_p1 = data_V_data_1_V_dout.read().range(5-1, 0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_trunc_ln746_5_fu_281_p1() {
    trunc_ln746_5_fu_281_p1 = data_V_data_2_V_dout.read().range(5-1, 0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_trunc_ln746_6_fu_345_p1() {
    trunc_ln746_6_fu_345_p1 = data_V_data_3_V_dout.read().range(5-1, 0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_trunc_ln746_fu_153_p1() {
    trunc_ln746_fu_153_p1 = data_V_data_0_V_dout.read().range(5-1, 0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_trunc_ln_fu_157_p3() {
    trunc_ln_fu_157_p3 = esl_concat<5,2>(trunc_ln746_fu_153_p1.read(), ap_const_lv2_0);
}

void relu_array_array_ap_fixed_4u_relu_config7_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln60_fu_119_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln60_fu_119_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

